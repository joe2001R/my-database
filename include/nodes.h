#ifndef NODES_H
#define NODES_H

#include "constants.h"

#include <stdint.h>

// common nodes header

#define COMMON_HEADER_OFFSET 0

#define IS_ROOT_OFFSET (COMMON_HEADER_OFFSET + 0)
#define IS_ROOT_SIZE sizeof(uint8_t)
#define PARENT_NODE_OFFSET (IS_ROOT_OFFSET + IS_ROOT_SIZE)
#define PARENT_NODE_SIZE sizeof(uint32_t)
#define NODE_TYPE_OFFSET (PARENT_NODE_OFFSET + PARENT_NODE_SIZE)
#define NODE_TYPE_SIZE sizeof(NodeType)

#define COMMON_HEADER_SIZE (IS_ROOT_SIZE + PARENT_NODE_SIZE + NODE_TYPE_SIZE)

// leaf nodes header

#define LEAF_NODE_HEADER_OFFSET (COMMON_HEADER_OFFSET + COMMON_HEADER_SIZE)

#define LEAF_NODE_NUM_RECORDS_OFFSET (LEAF_NODE_HEADER_OFFSET + 0)
#define LEAF_NODE_NUM_RECORDS_SIZE sizeof(uint32_t)
#define LEAF_NODE_RIGHT_CHILD_OFFSET (LEAF_NODE_NUM_RECORDS_OFFSET + LEAF_NODE_NUM_RECORDS_SIZE)
#define LEAF_NODE_RIGHT_CHILD_SIZE sizeof(uint32_t)

#define LEAF_NODE_HEADER_SIZE (LEAF_NODE_NUM_RECORDS_SIZE + LEAF_NODE_RIGHT_CHILD_SIZE)

// leaf nodes body

#define LEAF_NODE_KEY_REL_OFFSET (0)
#define LEAF_NODE_KEY_SIZE sizeof(uint32_t)
#define LEAF_NODE_ROW_REL_OFFSET (LEAF_NODE_KEY_REL_OFFSET + LEAF_NODE_KEY_SIZE)
#define LEAF_NODE_RECORD_SIZE (ROW_SIZE + LEAF_NODE_KEY_SIZE)

#define LEAF_NODE_BODY_OFFSET (LEAF_NODE_HEADER_OFFSET + LEAF_NODE_HEADER_SIZE)
#define LEAF_NODE_BODY_SIZE (PAGE_SIZE - LEAF_NODE_HEADER_SIZE - COMMON_HEADER_SIZE)

#define LEAF_NODE_MAX_NUM_RECORDS (LEAF_NODE_BODY_SIZE / LEAF_NODE_RECORD_SIZE)

#define LEAF_NODE_LEFT_SPLIT_COUNT ((LEAF_NODE_MAX_NUM_RECORDS + 1) / 2)
#define LEAF_NODE_RIGHT_SPLIT_COUNT (LEAF_NODE_MAX_NUM_RECORDS + 1 - LEAF_NODE_LEFT_SPLIT_COUNT)

// internal node header

#define INTERNAL_NODE_HEADER_OFFSET (COMMON_HEADER_OFFSET + COMMON_HEADER_SIZE)

#define INTERNAL_NODE_NUM_KEYS_OFFSET (INTERNAL_NODE_HEADER_OFFSET)
#define INTERNAL_NODE_NUM_KEYS_SIZE (sizeof(uint32_t))

#define INTERNAL_NODE_HEADER_SIZE (INTERNAL_NODE_NUM_KEYS_SIZE)

// internal node body

#define INTERNAL_NODE_BODY_OFFSET (INTERNAL_NODE_HEADER_OFFSET + INTERNAL_NODE_HEADER_SIZE)

#define INTERNAL_NODE_BODY_SIZE (PAGE_SIZE - INTERNAL_NODE_HEADER_SIZE - COMMON_HEADER_SIZE)
// child 0 key 0 child 1 key 1 child 2.... etc
#define INTERNAL_NODE_CHILD_REL_OFFSET (0)
#define INTERNAL_NODE_CHILD_SIZE (sizeof(uint32_t))
#define INTERNAL_NODE_KEY_REL_OFFSET (INTERNAL_NODE_CHILD_REL_OFFSET + INTERNAL_NODE_CHILD_SIZE)
#define INTERNAL_NODE_KEY_SIZE (sizeof(uint32_t))

#define INTERNAL_NODE_MAX_NUM_KEYS ((INTERNAL_NODE_BODY_SIZE - INTERNAL_NODE_CHILD_SIZE) / (INTERNAL_NODE_KEY_SIZE + INTERNAL_NODE_CHILD_SIZE))

#define INTERNAL_NODE_LEFT_SPLIT_COUNT ((INTERNAL_NODE_MAX_NUM_KEYS + 1) / 2 - 1)
#define INTERNAL_NODE_RIGHT_SPLIT_COUNT (INTERNAL_NODE_MAX_NUM_KEYS + 1 - INTERNAL_NODE_LEFT_SPLIT_COUNT - 1)

#endif